<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbuEfficiency" xml:space="preserve">
    <value>ABU Efficiency</value>
  </data>
  <data name="AbuEfficiencyFormol" xml:space="preserve">
    <value>Efficiency of industrial air purification from &lt;strong&gt;phenol and formaldehyde&lt;/strong&gt;</value>
  </data>
  <data name="AbuEfficiencyResin" xml:space="preserve">
    <value>Efficiency of industrial air purification from &lt;br&gt;&lt;strong&gt;suspended substances&lt;/strong&gt;</value>
  </data>
  <data name="AbuEfficiencyResinValue" xml:space="preserve">
    <value>&lt;span class="efficiency-item__value"&gt;{0}&lt;/span&gt; or higher</value>
  </data>
  <data name="AbuEfficiencyTriethylamine" xml:space="preserve">
    <value>Efficiency of industrial air purification from &lt;strong&gt;triethylamine&lt;/strong&gt;

</value>
  </data>
  <data name="AbuEfficiencyTriethylamineValue" xml:space="preserve">
    <value>(triethylamine output concentration does not exceed 20 mg/m&lt;sup&gt;3&lt;/sup&gt;)</value>
  </data>
  <data name="AbuIntro" xml:space="preserve">
    <value>Absorption-biological units (ABUs) are designed for industrial air purification from phenol, formaldehyde, triethylamine, benzol, acrolein, cyanides, ammonia, methanol, dust, and aerosols of tarry substances.</value>
  </data>
  <data name="AbuOperationDescription" xml:space="preserve">
    <value>Diagram and description of the Absorption - Biological Unit</value>
  </data>
  <data name="AbuOperationDetailsOne" xml:space="preserve">
    <value>Harmful substances are trapped in the scrubber with the help of a water absorbent and then they are neutralized (oxidized to CO&lt;sub&gt;2&lt;/sub&gt; and H&lt;sub&gt;2&lt;/sub&gt;O) in the bioreactor.</value>
  </data>
  <data name="AbuOperationDetailsThree" xml:space="preserve">
    <value>The microorganisms used in the ABU are derived from natural sources and as a result they are both non-toxic and non-pathogenic. The microorganisms have also passed a toxicological evaluation.</value>
  </data>
  <data name="AbuOperationDetailsTwo" xml:space="preserve">
    <value>The solution circulates in a closed &amp;laquo;scrubber-bioreactor&amp;raquo; cycle which prevents any industrial drains into the sewer system. Purified air is discharged into the atmosphere.</value>
  </data>
  <data name="AbuOprationTitle" xml:space="preserve">
    <value>ABU Operation Principles</value>
  </data>
  <data name="AbuOprationValueA" xml:space="preserve">
    <value>А – Ventilation air input</value>
  </data>
  <data name="AbuOprationValueB" xml:space="preserve">
    <value>В – Ventilation air output</value>
  </data>
  <data name="AbuOprationValueC" xml:space="preserve">
    <value>С – Absorption solution</value>
  </data>
  <data name="AbuOprationValueFour" xml:space="preserve">
    <value>4 – Ventilator</value>
  </data>
  <data name="AbuOprationValueOne" xml:space="preserve">
    <value>1 – Scrubber</value>
  </data>
  <data name="AbuOprationValueThree" xml:space="preserve">
    <value>3 – Bioreactor with Microorganisms</value>
  </data>
  <data name="AbuOprationValueTwo" xml:space="preserve">
    <value>2 – Pump</value>
  </data>
  <data name="AbuPurificationDescriptionOne" xml:space="preserve">
    <value>The first principle lies in the fact that the majority of harmful volatile organic compounds are soluble in service water.</value>
  </data>
  <data name="AbuPurificationDescriptionTwo" xml:space="preserve">
    <value>The second principle is based on the ability of specially selected and adapted microorganisms to use dissolved organic and some inorganic substances in water as a source of replenishment. As the microorganisms consume those harmful dissolved compounds, the compounds become fully mineralized and turned into water and carbon dioxide.</value>
  </data>
  <data name="AbuPurificationTitle" xml:space="preserve">
    <value>Ventilating air purification with the ABU is based on two natural processes:</value>
  </data>
  <data name="AbyEfficiencyDescription" xml:space="preserve">
    <value>Today, ABU has no match in the world market of gas purifying equipment on the aggregate index of efficiency, environmental friendliness, reliability, and cost effectiveness.</value>
  </data>
  <data name="CompanyIntro" xml:space="preserve">
    <value>&lt;span class="accent-text"&gt;Industrial Bio Technology&lt;/span&gt; company offers equipment for industrial air purification.</value>
  </data>
  <data name="Concentration" xml:space="preserve">
    <value>at least &lt;span class="efficiency-item__value"&gt;{0}&lt;/span&gt; given input concentration of {1} mg/m&lt;sup&gt;3&lt;/sup&gt;</value>
  </data>
  <data name="IndexTitle" xml:space="preserve">
    <value>IBT air purification from phenol, formaldehyde, triethylamine</value>
  </data>
  <data name="schemaAlt" xml:space="preserve">
    <value>ABU Schema</value>
  </data>
</root>